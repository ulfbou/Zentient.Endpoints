name: Simplified CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build_and_test:
    name: Build and Test .NET Application
    runs-on: ubuntu-latest

    env:
      SOLUTION_FILE_NAME: Zentient.Endpoints.sln # Keep this for reference if needed
      DOTNET_CLI_TELEMETRY_OPTOUT: 1
      DOTNET_CLI_UI_LANGUAGE: en
      NUGET_XMLDOC_MODE: skip

    steps:
      - name: üßæ Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: recursive

      - name: üìÅ Define Paths for Debugging
        run: |
          # Define variables for immediate use within this step
          REPO_ROOT="$GITHUB_WORKSPACE"
          # Construct the full absolute path for the solution file
          MAIN_SOLUTION_PATH="$GITHUB_WORKSPACE/$SOLUTION_FILE_NAME"
          SRC_DIR="$GITHUB_WORKSPACE/Src"
          TESTS_DIR="$GITHUB_WORKSPACE/Tests"

          # Export them to be available for subsequent steps
          echo "REPO_ROOT=$REPO_ROOT" >> $GITHUB_ENV
          echo "MAIN_SOLUTION_PATH=$MAIN_SOLUTION_PATH" >> $GITHUB_ENV
          echo "SRC_DIR=$SRC_DIR" >> $GITHUB_ENV
          echo "TESTS_DIR=$TESTS_DIR" >> $GITHUB_ENV

          echo "--- Current Working Directory ---"
          pwd
          echo "--- Content of GITHUB_WORKSPACE ---"
          ls -F "$GITHUB_WORKSPACE"

          echo "--- Value of SRC_DIR: ${SRC_DIR} ---"
          echo "--- Content of SRC_DIR (if it exists) ---"
          ls -F "${SRC_DIR}" || echo "SRC_DIR does not exist or is empty, despite being listed in GITHUB_WORKSPACE."

          echo "--- Value of TESTS_DIR: ${TESTS_DIR} ---"
          echo "--- Content of TESTS_DIR (if it exists) ---"
          ls -F "${TESTS_DIR}" || echo "TESTS_DIR does not exist or is empty, despite being listed in GITHUB_WORKSPACE."

      - name: üß™ Validate Structure for Debugging
        run: |
          echo "üóÇ Validating paths..."
          echo "MAIN_SOLUTION_PATH (for validation): $MAIN_SOLUTION_PATH"
          test -f "$MAIN_SOLUTION_PATH" || (echo "‚ùå Missing solution file: $MAIN_SOLUTION_PATH" && exit 1)

          echo "SRC_DIR (for validation): $SRC_DIR"
          test -d "$SRC_DIR" || echo "‚ö†Ô∏è Missing source dir: $SRC_DIR - This might be the cause of project file errors!"

          echo "TESTS_DIR (for validation): $TESTS_DIR"
          test -d "$TESTS_DIR" || echo "‚ö†Ô∏è Missing test dir: $TESTS_DIR - This might be the cause of project file errors!"
          echo "Validation complete."

      - name: ‚öôÔ∏è Setup .NET SDK (8.0.x)
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: üì¶ Cache NuGet packages
        uses: actions/cache@v4
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj') }}
          restore-keys: |
            ${{ runner.os }}-nuget-

      - name: üîß Restore Dependencies
        working-directory: ${{ env.REPO_ROOT }}
        # Pass the full absolute path to the solution file now
        run: dotnet restore ${{ env.MAIN_SOLUTION_PATH }}

      - name: üîß Build Solution
        working-directory: ${{ env.REPO_ROOT }}
        # Pass the full absolute path to the solution file now
        run: dotnet build ${{ env.MAIN_SOLUTION_PATH }} --no-restore --configuration Release

      - name: üß™ Run Tests
        working-directory: ${{ env.REPO_ROOT }}
        # Pass the full absolute path to the solution file now
        run: dotnet test ${{ env.MAIN_SOLUTION_PATH }} --no-build --configuration Release
