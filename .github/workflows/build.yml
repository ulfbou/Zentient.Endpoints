name: Zentient.Endpoints CI

on:
  push:
    branches: [ develop/cicd ] 
  pull_request:
    branches: [ main ]  
  workflow_dispatch:    

jobs:
  build:
    name: Build and Test (.NET ${{ matrix.dotnet-version }}) 
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/${{ github.repository_owner }}/zentient-endpoints-ci:latest
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    env:
      ZENTIENT_CI_BUILD: true
      ZENTIENT_CI_VERSION: ${{ github.run_number }}
      ZENTIENT_CI_COMMIT_SHA: ${{ github.sha }}
      ZENTIENT_CI_COMMIT_SHORT_SHA: ${{ github.sha_short }}
      ZENTIENT_CI_BRANCH: ${{ github.ref_name }}
      ZENTIENT_CI_EVENT_NAME: ${{ github.event_name }}
      ZENTIENT_CI_RUN_URL: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}
      ZENTIENT_CI_RUN_ID: ${{ github.run_id }}
      ZENTIENT_CI_WORKFLOW: ${{ github.workflow }}
      SOLUTION_FILE_NAME: Zentient.Endpoints.sln
      DOTNET_CLI_TELEMETRY_OPTOUT: 1 
      DOTNET_CLI_UI_LANGUAGE: en    
      NUGET_XMLDOC_MODE: skip

    strategy:
      matrix:
        dotnet-version: ['8.0.15', '9.0.6']

    steps:
      - name: 🧾 Checkout repository
        uses: actions/checkout@v4

      - name: 📁 Define Paths
        run: |
          echo "REPO_ROOT=${GITHUB_WORKSPACE}" >> $GITHUB_ENV
          echo "MAIN_SOLUTION_PATH=${GITHUB_WORKSPACE}/${SOLUTION_FILE_NAME}" >> $GITHUB_ENV
          echo "SRC_DIR=${GITHUB_WORKSPACE}/src" >> $GITHUB_ENV
          echo "TESTS_DIR=${GITHUB_WORKSPACE}/tests" >> $GITHUB_ENV

      - name: 📦 Cache NuGet packages
        uses: actions/cache@v4
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ matrix.dotnet-version }}-${{ hashFiles('**/packages.lock.json', SOLUTION_FILE_NAME) }}
          restore-keys: |
            ${{ runner.os }}-nuget-${{ matrix.dotnet-version }}-
            ${{ runner.os }}-nuget-

      - name: 🔧 Restore solution
        run: dotnet restore "${MAIN_SOLUTION_PATH}" --verbosity normal

      - name: 🔧 Build solution
        run: dotnet build "${MAIN_SOLUTION_PATH}" --no-restore -warnaserror

      - name: 🧪 Run Tests
        run: dotnet test "${MAIN_SOLUTION_PATH}" --no-build --verbosity normal --logger "trx"

      - name: 🔍 Debug .NET Runtimes
        run: |
          echo "Listing installed .NET SDKs and Runtimes for debugging:"
          dotnet --list-sdks
          dotnet --list-runtimes
          echo "Contents of DOTNET_ROOT/shared/Microsoft.AspNetCore.App:"
          ls -l "${DOTNET_INSTALL_DIR}/shared/Microsoft.AspNetCore.App"

      - name: 📤 Upload Test Results
        if: always() 
        uses: actions/upload-artifact@v4
        with:
          name: test-results-${{ matrix.dotnet-version }}
          path: '**/TestResults/*.trx' 
