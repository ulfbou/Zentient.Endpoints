name: Zentient.Endpoints CI

on:
  push:
    branches: [ develop/cicd ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    name: Build and Test (.NET 8/9)
    runs-on: ubuntu-latest

    env:
      SOLUTION_FILE_NAME: Zentient.Endpoints.sln
      DOTNET_CLI_TELEMETRY_OPTOUT: 1
      DOTNET_CLI_UI_LANGUAGE: en
      NUGET_XMLDOC_MODE: skip

    strategy:
      matrix:
        dotnet-version: ['8.0.x', '9.0.x']

    steps:
      - name: 🧾 Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: recursive

      - name: 📁 Define Paths
        run: |
          echo "REPO_ROOT=$GITHUB_WORKSPACE" >> $GITHUB_ENV
          echo "MAIN_SOLUTION_PATH=$GITHUB_WORKSPACE/$SOLUTION_FILE_NAME" >> $GITHUB_ENV
          echo "SRC_DIR=$GITHUB_WORKSPACE/Src" >> $GITHUB_ENV
          echo "TESTS_DIR=$GITHUB_WORKSPACE/Tests" >> $GITHUB_ENV

      - name: 🧪 Validate Structure
        run: |
          echo "🗂 Validating paths..."
          test -f "$MAIN_SOLUTION_PATH" || (echo "❌ Missing solution file: $MAIN_SOLUTION_PATH" && exit 1)
          test -d "$SRC_DIR" || echo "⚠️ Missing source dir: $SRC_DIR"
          test -d "$TESTS_DIR" || echo "⚠️ Missing test dir: $TESTS_DIR"

      - name: 🧪 Debug Info
        run: |
          echo "🗂 Debug Info..."
          echo "GITHUB_WORKSPACE: $GITHUB_WORKSPACE"
          ls -l "$GITHUB_WORKSPACE"
          echo "MAIN_SOLUTION_PATH: $MAIN_SOLUTION_PATH"
          ls -l "$MAIN_SOLUTION_PATH"
          echo "SRC_DIR: $SRC_DIR"
          ls -l "$SRC_DIR"
          echo "TESTS_DIR: $TESTS_DIR"
          ls -l "$TESTS_DIR"
          echo "🗂 Debug Info ending..."

      - name: ⚙️ Setup .NET SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ matrix.dotnet-version }}

      - name: 📦 Cache NuGet packages
        uses: actions/cache@v4
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj') }}
          restore-keys: |
            ${{ runner.os }}-nuget-

      - name: 🔧 Restore solution
        run: dotnet restore "$MAIN_SOLUTION_PATH"

      - name: 🔍 Format Check
        run: dotnet format "$MAIN_SOLUTION_PATH" --verify-no-changes --severity error

      - name: 🔧 Build
        run: dotnet build "$MAIN_SOLUTION_PATH" --no-restore -warnaserror

      - name: 🧪 Run Tests
        run: dotnet test "$MAIN_SOLUTION_PATH" --no-build --verbosity normal --logger "trx"

      - name: 📤 Upload Test Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results-${{ matrix.dotnet-version }}
          path: '**/TestResults/*.trx'
